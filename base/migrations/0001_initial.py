# Generated by Django 2.2.7 on 2020-01-23 14:38

import base.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import newadmin.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'permissions': (('pode_cadastrar_solicitacao', 'Pode Cadastrar Solicitação'), ('pode_cadastrar_pregao', 'Pode Cadastrar Pregão'), ('pode_cadastrar_pesquisa_mercadologica', 'Pode Cadastrar Pesquisa Mercadológica'), ('pode_ver_minuta', 'Pode Ver Minuta'), ('pode_avaliar_minuta', 'Pode Avaliar Minuta'), ('pode_abrir_processo', 'Pode Abrir Processo'), ('pode_gerenciar_contrato', 'Pode Gerenciar Contrato')),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AnexoPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome')),
                ('data', models.DateField(verbose_name='Data')),
                ('arquivo', models.FileField(max_length=255, upload_to='upload/pregao/editais/anexos/')),
                ('cadastrado_em', models.DateTimeField(verbose_name='Cadastrado em')),
                ('publico', models.BooleanField(default=False, help_text='Se sim, este documento será exibido publicamente', verbose_name='Documento Público')),
                ('cadastrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Anexo do Pregão',
                'verbose_name_plural': 'Anexos do Pregão',
            },
        ),
        migrations.CreateModel(
            name='AtaRegistroPreco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(help_text='No formato: 99999/9999', max_length=100, verbose_name='Número')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('data_inicio', models.DateField(null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(null=True, verbose_name='Data de Vencimento')),
                ('adesao', models.BooleanField(default=False, verbose_name='Adesão')),
                ('concluido', models.BooleanField(default=False)),
                ('suspenso', models.BooleanField(default=False)),
                ('cancelado', models.BooleanField(default=False)),
                ('motivo_cancelamento', models.TextField(blank=True)),
                ('dh_cancelamento', models.DateTimeField(blank=True, null=True)),
                ('orgao_origem', models.CharField(max_length=100, null=True, verbose_name='Órgão de Origem')),
                ('num_oficio', models.CharField(max_length=100, null=True, verbose_name='Número do Ofício')),
                ('objeto', models.TextField(null=True, verbose_name='Objeto')),
                ('liberada_compra', models.BooleanField(default=False, verbose_name='Liberada para Compra')),
                ('data_esgotamento', models.DateField(null=True, verbose_name='Data de Esgotamento da Ata')),
            ],
            options={
                'verbose_name': 'Ata de Registro de Preço',
                'verbose_name_plural': 'Atas de Registro de Preço',
            },
        ),
        migrations.CreateModel(
            name='ComissaoLicitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Portaria')),
                ('data_designacao', models.DateField(null=True, verbose_name='Data de Designação')),
                ('tipo', models.CharField(choices=[('CPL', 'CPL'), ('Pregão', 'Pregão')], default='CPL', max_length=50, verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Comissão de Licitação',
                'verbose_name_plural': 'Comissões de Licitação',
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(help_text='No formato: 99999/9999', max_length=100, verbose_name='Número')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=20)),
                ('data_inicio', models.DateField(null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(null=True, verbose_name='Data de Vencimento')),
                ('continuado', models.BooleanField(default=False)),
                ('concluido', models.BooleanField(default=False)),
                ('suspenso', models.BooleanField(default=False)),
                ('cancelado', models.BooleanField(default=False)),
                ('motivo_cancelamento', models.TextField(blank=True)),
                ('dh_cancelamento', models.DateTimeField(blank=True, null=True)),
                ('liberada_compra', models.BooleanField(default=False, verbose_name='Liberada para Compra')),
                ('aplicacao_artigo_57', models.CharField(blank=True, choices=[('', '---------------'), ('I', 'I - aos projetos cujos produtos estejam contemplados nas metas estabelecidas no Plano Plurianual, os quais poderão ser prorrogados se houver interesse da Administração e desde que isso tenha sido previsto no ato convocatório;'), ('II', 'II - à prestação de serviços a serem executados de forma contínua, que poderão ter a sua duração prorrogada por iguais e sucessivos períodos com vistas à obtenção de preços e condições mais vantajosas para a administração, limitada a sessenta meses; (Redação dada pela Lei nº 9.648, de 1998)'), ('IV', 'IV - ao aluguel de equipamentos e à utilização de programas de informática, podendo a duração estender-se pelo prazo de até 48 (quarenta e oito) meses após o início da vigência do contrato.'), ('V', 'V - às hipóteses previstas nos incisos IX, XIX, XXVIII e XXXI do art. 24, cujos contratos poderão ter vigência por até 120 (cento e vinte) meses, caso haja interesse da administração. (Incluído pela Lei nº 12.349, de 2010)')], default='', max_length=200, null=True, verbose_name='Aplicação do Art. 57 da Lei 8666/93(Art. 57. - A duração dos contratos regidos por esta Lei ficará adstrita à vigência dos respectivos créditos orçamentários, exceto quanto aos relativos:)')),
                ('garantia_execucao_objeto', models.CharField(blank=True, help_text='Limitado a 5%. Deixar em branco caso não se aplique.', max_length=50, null=True, verbose_name='Garantia de Execução do Objeto (%)')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': 'Contratos',
            },
        ),
        migrations.CreateModel(
            name='Credenciamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(help_text='No formato: 99999/9999', max_length=100, verbose_name='Número')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('data_inicio', models.DateField(null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(null=True, verbose_name='Data de Vencimento')),
                ('concluido', models.BooleanField(default=False)),
                ('suspenso', models.BooleanField(default=False)),
                ('cancelado', models.BooleanField(default=False)),
                ('motivo_cancelamento', models.TextField(blank=True)),
                ('dh_cancelamento', models.DateTimeField(blank=True, null=True)),
                ('orgao_origem', models.CharField(max_length=100, null=True, verbose_name='Órgão de Origem')),
                ('num_oficio', models.CharField(max_length=100, null=True, verbose_name='Número do Ofício')),
                ('objeto', models.TextField(null=True, verbose_name='Objeto')),
                ('liberada_compra', models.BooleanField(default=False, verbose_name='Liberada para Compra')),
            ],
            options={
                'verbose_name': 'Credenciamento',
                'verbose_name_plural': 'Credenciamentos',
            },
        ),
        migrations.CreateModel(
            name='CriterioPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Critério de Julgamento do Pregão',
                'verbose_name_plural': 'Critérios de Julgamento de Pregão',
            },
        ),
        migrations.CreateModel(
            name='DotacaoOrcamentaria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Dotação Orçamentária',
                'verbose_name_plural': 'Dotações Orçamentárias',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
                ('sigla', models.CharField(max_length=2, verbose_name='Sigla')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj', models.CharField(help_text='Utilize pontos e traços.', max_length=255, unique=True, verbose_name='CNPJ/CPF')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão Social/Nome')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('telefones', models.CharField(max_length=300, verbose_name='Telefones')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('suspenso', models.BooleanField(default=False, verbose_name='Fornecedor Suspenso')),
                ('suspenso_ate', models.DateField(blank=True, null=True, verbose_name='Suspenso Até')),
                ('motivo_suspensao', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Motivo da Suspensão')),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
            },
        ),
        migrations.CreateModel(
            name='FornecedorCRC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porte_empresa', models.CharField(choices=[('MEI - Microempreendedor Individual', 'MEI - Microempreendedor Individual'), ('Pequena empresa', 'Pequena empresa'), ('Média empresa', 'Média empresa'), ('Média-grande empresa', 'Média-grande empresa'), ('Grande empresa', 'Grande empresa')], max_length=100, verbose_name='Porte da Empresa')),
                ('data_abertura', models.DateField(verbose_name='Data de Abertura da Empresa')),
                ('inscricao_estadual', models.CharField(blank=True, max_length=100, null=True, verbose_name='Inscrição Estadual')),
                ('inscricao_municipal', models.CharField(blank=True, max_length=100, null=True, verbose_name='Inscrição Municipal')),
                ('natureza_juridica', models.CharField(blank=True, max_length=500, null=True, verbose_name='Natureza Jurídica')),
                ('ramo_negocio', models.CharField(max_length=500, verbose_name='Ramo do Negócio')),
                ('cnae_primario_codigo', models.CharField(max_length=30, verbose_name='Código do CNAE Primário')),
                ('cnae_primario_descricao', models.CharField(max_length=500, verbose_name='Descrição do CNAE Primário')),
                ('objetivo_social', models.CharField(max_length=5000, verbose_name='Objetivo Social')),
                ('capital_social', models.CharField(blank=True, max_length=100, null=True, verbose_name='Capital Social (R$)')),
                ('data_ultima_integralizacao', models.DateField(blank=True, null=True, verbose_name='Data da Última Integralização')),
                ('banco', models.CharField(blank=True, max_length=200, null=True, verbose_name='Banco')),
                ('agencia', models.CharField(blank=True, max_length=50, null=True, verbose_name='Agência')),
                ('conta', models.CharField(blank=True, max_length=200, null=True, verbose_name='Conta')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome do Representante Legal')),
                ('cpf', models.CharField(max_length=20, verbose_name='CPF')),
                ('rg', models.CharField(max_length=20, verbose_name='Carteira de Identidade')),
                ('rg_emissor', models.CharField(max_length=20, verbose_name='Órgão Expedidor ')),
                ('data_expedicao', models.DateField(blank=True, null=True, verbose_name='Data de Expedição')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('email', models.CharField(max_length=200, verbose_name='Email ')),
                ('validade', models.DateField(verbose_name='Validade')),
                ('numero', models.IntegerField(blank=True, null=True, verbose_name='Número')),
                ('ano', models.IntegerField(blank=True, null=True, verbose_name='Ano')),
                ('renovado', models.BooleanField(default=False, verbose_name='Renovado')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Fornecedor', verbose_name='Fornecedor')),
            ],
            options={
                'verbose_name': 'Certificado de Registro Cadastral',
                'verbose_name_plural': 'Certificados de Registros Cadastrais',
            },
        ),
        migrations.CreateModel(
            name='ItemAtaRegistroPreco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=200, null=True, verbose_name='Marca')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Valor')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('ordem', models.IntegerField(null=True, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_esgotamento', models.DateField(null=True, verbose_name='Data de Esgotamento do Item')),
                ('ata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AtaRegistroPreco')),
                ('fornecedor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Fornecedor')),
            ],
            options={
                'verbose_name': 'Item da ARP',
                'verbose_name_plural': 'Itens da ARP',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='ItemContrato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=200, null=True, verbose_name='Marca')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Valor')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('inserido_outro_contrato', models.BooleanField(default=False, verbose_name='Inserido em Outro Contrato')),
                ('ordem', models.IntegerField(null=True, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Contrato')),
                ('fornecedor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Fornecedor')),
            ],
            options={
                'verbose_name': 'Item do Contrato',
                'verbose_name_plural': 'Itens do Contrato',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='ItemCredenciamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=200, null=True, verbose_name='Marca')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Valor')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('ordem', models.IntegerField(null=True, verbose_name='Ordem')),
                ('credenciamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Credenciamento')),
            ],
            options={
                'verbose_name': 'Item do Credenciamento',
                'verbose_name_plural': 'Itens do Credenciamento',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='ItemSolicitacaoLicitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.IntegerField(verbose_name='Item')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('valor_medio', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor Médio')),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Total')),
                ('situacao', models.CharField(choices=[('Cadastrado', 'Cadastrado'), ('Deserto', 'Deserto'), ('Fracassado', 'Fracassado'), ('Concluído', 'Concluído')], default='Cadastrado', max_length=50, verbose_name='Situação')),
                ('obs', models.CharField(blank=True, max_length=3000, null=True, verbose_name='Observação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('eh_lote', models.BooleanField(default=False, verbose_name='Lote')),
                ('arquivo_referencia_valor_medio', models.FileField(null=True, upload_to='upload/referencias_valor_medio/', verbose_name='Arquivo com a Referência do Valor Médio')),
                ('desconto_item', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Desconto')),
            ],
            options={
                'verbose_name': 'Item da Solicitação de Licitação',
                'verbose_name_plural': 'Itens da Solicitação de Licitação',
                'ordering': ['item'],
            },
        ),
        migrations.CreateModel(
            name='MaterialConsumo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.TextField(verbose_name='Nome')),
                ('observacao', models.CharField(blank=True, max_length=500, null=True, verbose_name='Observação')),
                ('codigo', models.CharField(blank=True, max_length=6, verbose_name='Código')),
            ],
            options={
                'verbose_name': 'Material de Consumo',
                'verbose_name_plural': 'Materiais de Consumo',
            },
        ),
        migrations.CreateModel(
            name='ModalidadePregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Modalidade de Pregão',
                'verbose_name_plural': 'Modalidades de Pregão',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='MotivoSuspensaoPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Motivo de Suspensão do Pregão',
                'verbose_name_plural': 'Motivos de Suspensão do Pregão',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=7, verbose_name='Código IBGE')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Estado')),
            ],
            options={
                'verbose_name': 'Município',
                'verbose_name_plural': 'Municípios',
                'ordering': ('nome',),
            },
        ),
        migrations.CreateModel(
            name='OpcaoLCN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=5000, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Opção da LCN',
                'verbose_name_plural': 'Opções da LCN',
            },
        ),
        migrations.CreateModel(
            name='ParticipantePregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_representante', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Representante')),
                ('rg_representante', models.CharField(blank=True, max_length=255, null=True, verbose_name='RG do Representante')),
                ('cpf_representante', models.CharField(blank=True, max_length=255, null=True, verbose_name='CPF do Representante')),
                ('obs_ausencia_participante', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Motivo da Ausência do Representante')),
                ('me_epp', models.BooleanField(verbose_name='Micro Empresa/Empresa de Peq.Porte')),
                ('desclassificado', models.BooleanField(default=False, verbose_name='Desclassificado')),
                ('motivo_desclassificacao', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Motivo da Desclassificação')),
                ('arquivo_propostas', models.FileField(blank=True, null=True, upload_to='upload/propostas/', verbose_name='Arquivo com as Propostas')),
                ('excluido_dos_itens', models.BooleanField(default=False, verbose_name='Excluído dos Itens')),
                ('credenciado', models.BooleanField(default=True, verbose_name='Credenciado')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Fornecedor', verbose_name='Fornecedor')),
            ],
            options={
                'verbose_name': 'Participante do Pregão',
                'verbose_name_plural': 'Participantes do Pregão',
                'ordering': ['desclassificado', 'fornecedor__razao_social'],
            },
        ),
        migrations.CreateModel(
            name='PessoaFisica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80)),
                ('matricula', models.CharField(max_length=50, null=True, verbose_name='Matrícula')),
                ('vinculo', models.CharField(choices=[('Cedido de outra Unidade Administrativa', 'Cedido de outra Unidade Administrativa'), ('Empregado Público', 'Empregado Público'), ('Servidor Público Comissionado', 'Servidor Público Comissionado'), ('Servidor Público Efetivo', 'Servidor Público Efetivo'), ('Servidor Temporário', 'Servidor Temporário'), ('Terceiro estranho à Administração', 'Terceiro estranho à Administração')], default='Servidor Público Efetivo', max_length=200, verbose_name='Vínculo')),
                ('cpf', models.CharField(help_text='Digite o CPF com pontos e traços.', max_length=15, verbose_name='CPF')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], max_length=1, verbose_name='Sexo')),
                ('data_nascimento', models.DateField(null=True, verbose_name='Data de Nascimento')),
                ('telefones', models.CharField(blank=True, max_length=60, null=True, verbose_name='Telefone')),
                ('celulares', models.CharField(blank=True, max_length=60, null=True, verbose_name='Celular')),
                ('email', models.CharField(blank=True, max_length=80, null=True, verbose_name='Email')),
                ('cep', newadmin.utils.CepModelField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('logradouro', models.CharField(blank=True, max_length=80, null=True, verbose_name='Logradouro')),
                ('numero', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=80, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=80, null=True, verbose_name='Bairro')),
                ('municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Municipio')),
            ],
            options={
                'verbose_name': 'Pessoa',
                'verbose_name_plural': 'Pessoas',
            },
        ),
        migrations.CreateModel(
            name='Pregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_pregao', models.CharField(max_length=255, verbose_name='Número do Pregão')),
                ('objeto', models.TextField(null=True, verbose_name='Objeto')),
                ('fundamento_legal', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Fundamento Legal')),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Data de Início da Retirada do Edital')),
                ('data_termino', models.DateField(blank=True, null=True, verbose_name='Data de Término da Retirada do Edial')),
                ('data_abertura', models.DateField(blank=True, null=True, verbose_name='Data de Abertura do Certame')),
                ('hora_abertura', models.TimeField(blank=True, null=True, verbose_name='Hora de Abertura do Certame')),
                ('data_abertura_original', models.DateField(blank=True, null=True, verbose_name='Data Inicial de Abertura do Certame')),
                ('hora_abertura_original', models.TimeField(blank=True, null=True, verbose_name='Hora Inicial de Abertura do Certame')),
                ('local', models.CharField(max_length=1500, verbose_name='Local')),
                ('responsavel', models.CharField(max_length=255, verbose_name='Responsável')),
                ('situacao', models.CharField(choices=[('Publicado', 'Publicado'), ('Deserto', 'Deserto'), ('Fracassado', 'Fracassado'), ('Suspenso', 'Suspenso'), ('Adjudicado', 'Adjudicado'), ('Homologado', 'Homologado'), ('Revogado/Anulado', 'Revogado/Anulado')], default='Publicado', max_length=50, verbose_name='Situação')),
                ('categoria_suspensao', models.CharField(blank=True, choices=[('', '--------------'), ('Análise de Amostras', 'Análise de Amostras'), ('Documentação Complementar', 'Documentação Complementar'), ('Impugnação', 'Impugnação'), ('Parecer Técnico', 'Parecer Técnico'), ('Prazo de Recurso', 'Prazo de Recurso'), ('Proposta Final', 'Proposta Final'), ('Revisão do Processo', 'Revisão do Processo')], max_length=100, null=True, verbose_name='Situação')),
                ('obs', models.CharField(blank=True, max_length=3000, null=True, verbose_name='Observação')),
                ('data_adjudicacao', models.DateField(blank=True, null=True, verbose_name='Data da Adjudicação')),
                ('data_homologacao', models.DateField(blank=True, null=True, verbose_name='Data da Homologação')),
                ('data_revogacao', models.DateField(blank=True, null=True, verbose_name='Data da Revogação')),
                ('data_suspensao', models.DateField(blank=True, null=True, verbose_name='Data da Suspensão')),
                ('eh_ata_registro_preco', models.BooleanField(default=True, verbose_name='Ata de Registro de Preço?')),
                ('arquivo_homologacao', models.FileField(blank=True, null=True, upload_to=base.models.upload_path_termo_homologacao, verbose_name='Termo de Homologação')),
                ('pode_homologar', models.BooleanField(default=False, verbose_name='Pode Homologar')),
                ('data_retorno', models.DateField(blank=True, null=True, verbose_name='Data do Retorno')),
                ('sine_die', models.NullBooleanField(verbose_name='Sine Die')),
                ('republicado', models.BooleanField(default=False, verbose_name='Republicado')),
                ('objeto_tipo', models.CharField(blank=True, choices=[('Compra de Material de Consumo', 'Compra de Material de Consumo'), ('Compra de Material Permanente', 'Compra de Material Permanente'), ('Obras', 'Obras'), ('Serviços de Engenharia', 'Serviços de Engenharia'), ('Serviço de Reforma de Edifício ou de Equipamento', 'Serviço de Reforma de Edifício ou de Equipamento'), ('Serviços – Outros', 'Serviços – Outros')], max_length=200, null=True, verbose_name='Objeto - Tipo')),
                ('valor_total', models.CharField(blank=True, max_length=20, null=True, verbose_name='Valor Total Orçado')),
                ('recurso_proprio', models.CharField(blank=True, max_length=20, null=True, verbose_name='Recurso Próprio')),
                ('recurso_federal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Recurso Transferido (Federal)')),
                ('recurso_estadual', models.CharField(blank=True, max_length=20, null=True, verbose_name='Recurso Transferido (Estadual)')),
                ('recurso_municipal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Recurso Transferido (Municipal)')),
                ('aplicacao_lcn_123_06', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.OpcaoLCN', verbose_name='MPE – Aplicação Da LCN 123/06 (Lei 123/06)')),
                ('comissao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ComissaoLicitacao', verbose_name='Comissão de Licitação')),
                ('criterio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.CriterioPregao', verbose_name='Critério de Adjudicação')),
                ('modalidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ModalidadePregao', verbose_name='Modalidade / Procedimento')),
                ('ordenador_despesa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.PessoaFisica', verbose_name='Ordenador de Despesa')),
            ],
            options={
                'verbose_name': 'Pregão',
                'verbose_name_plural': 'Pregões',
                'ordering': ['-data_abertura'],
            },
        ),
        migrations.CreateModel(
            name='Processo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('numero', models.CharField(max_length=25, unique=True, verbose_name='Número do Processo')),
                ('objeto', models.CharField(max_length=1500)),
                ('tipo', models.PositiveIntegerField(choices=[[1, 'Memorando'], [2, 'Ofício'], [3, 'Requerimento']])),
                ('status', models.PositiveIntegerField(choices=[[1, 'Em trâmite'], [2, 'Finalizado'], [3, 'Arquivado']], default=1, verbose_name='Situação')),
                ('palavras_chave', models.TextField(null=True, verbose_name='Palavras-chave')),
                ('data_finalizacao', models.DateTimeField(editable=False, null=True)),
                ('observacao_finalizacao', models.TextField(blank=True, null=True, verbose_name='Despacho')),
                ('pessoa_cadastro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pessoa_cadastro_set', to=settings.AUTH_USER_MODEL)),
                ('pessoa_finalizacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pessoa_finalizacao_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Processo',
                'verbose_name_plural': 'Processos',
            },
        ),
        migrations.CreateModel(
            name='Secretaria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
                ('sigla', models.CharField(blank=True, max_length=20, null=True, verbose_name='Sigla')),
                ('cnpj', models.CharField(max_length=200, null=True, verbose_name='CNPJ')),
                ('endereco', models.CharField(max_length=2000, null=True, verbose_name='Endereço')),
                ('email', models.CharField(max_length=200, null=True, verbose_name='Email')),
                ('telefones', models.CharField(help_text='Separar os telefones usando /', max_length=1000, null=True, verbose_name='Telefones')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='upload/logo/', verbose_name='Logo')),
                ('eh_ordenadora_despesa', models.BooleanField(default=True, verbose_name='O responsável pelo Órgão é o Ordenador de Despesa?')),
                ('cpf_ordenador_despesa', models.CharField(max_length=200, null=True, verbose_name='CPF do Ordenador de Despesa')),
                ('ordenador_despesa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secretaria_ordenador', to='base.PessoaFisica', verbose_name='Ordenador de Despesa')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secretaria_responsavel', to='base.PessoaFisica', verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Órgão',
                'verbose_name_plural': 'Órgãos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
                ('sigla', models.CharField(blank=True, max_length=20, null=True, verbose_name='Sigla')),
                ('secretaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Secretaria', verbose_name='Órgão')),
            ],
            options={
                'verbose_name': 'Setor',
                'verbose_name_plural': 'Setores',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='TipoModelo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Tipo do Modelo',
                'verbose_name_plural': 'Tipos do Modelo',
            },
        ),
        migrations.CreateModel(
            name='TipoObjetoModelo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Tipo de Objeto do Modelo',
                'verbose_name_plural': 'Tipos de Objetos do Modelo',
            },
        ),
        migrations.CreateModel(
            name='TipoPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Tipo de Pregão',
                'verbose_name_plural': 'Tipos de Pregão',
            },
        ),
        migrations.CreateModel(
            name='TipoPregaoDesconto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Tipo de Pregão de Desconto',
                'verbose_name_plural': 'Tipos de Pregão de Desconto',
            },
        ),
        migrations.CreateModel(
            name='TipoUnidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Unidade')),
            ],
            options={
                'verbose_name': 'Tipo de Unidade',
                'verbose_name_plural': 'Tipos de Unidade',
                'ordering': ('nome',),
            },
        ),
        migrations.CreateModel(
            name='TrocarSenha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(max_length=128)),
                ('validade', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='VisitantePregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome')),
                ('cpf', models.CharField(blank=True, max_length=255, null=True, verbose_name='CPF')),
                ('pregao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Pregao', verbose_name='Pregão')),
            ],
            options={
                'verbose_name': 'Visitante do Pregão',
                'verbose_name_plural': 'Visitantes do Pregão',
            },
        ),
        migrations.CreateModel(
            name='TransferenciaItemARP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('justificativa', models.CharField(max_length=5000, verbose_name='Justificativa')),
                ('cadastrado_em', models.DateTimeField(verbose_name='Cadastrado em')),
                ('cadastrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.PessoaFisica')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemAtaRegistroPreco', verbose_name='Item da ARP')),
                ('secretaria_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sec_destino', to='base.Secretaria', verbose_name='Secretaria de Destino')),
                ('secretaria_origem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sec_origem', to='base.Secretaria', verbose_name='Secretaria de Origem')),
            ],
            options={
                'verbose_name': 'Transferência de Item de ARP',
                'verbose_name_plural': 'Transferências de Itens de ARP',
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoLicitacaoTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_memorando', models.CharField(max_length=80, verbose_name='Número do Memorando')),
                ('objeto', models.TextField(verbose_name='Descrição do Objeto')),
                ('objetivo', models.TextField(verbose_name='Objetivo')),
                ('situacao', models.CharField(choices=[('Cadastrado', 'Cadastrado'), ('Aguardando Recebimento', 'Aguardando Recebimento'), ('Recebido', 'Recebido'), ('Devolvido', 'Devolvido'), ('Enviado para Licitação', 'Enviado para Licitação'), ('Em Licitação', 'Em Licitação'), ('Negada', 'Negada')], default='Cadastrado', max_length=50, verbose_name='Situação')),
                ('tipo', models.CharField(choices=[('Compra', 'Compra'), ('Licitação', 'Licitação')], default='Licitação', max_length=50, verbose_name='Tipo')),
                ('tipo_aquisicao', models.CharField(choices=[('Licitação', 'Licitação'), ('Dispensa', 'Dispensa de Licitação (Outros)'), ('Dispensa de Licitação (Até R$ 17.600,00)', 'Dispensa de Licitação (Até R$ 17.600,00 - Aquisição de Bens ou Serviços Comuns)'), ('Dispensa de Licitação (Até R$ 33.000,00)', 'Dispensa de Licitação (Até R$ 33.000,00 - Obras ou Serviços de Engenharia)'), ('Inexigibilidade', 'Inexigibilidade de Licitação'), ('Credenciamento', 'Credenciamento'), ('Chamada Pública - Alimentação Escolar', 'Chamada Pública - Alimentação Escolar'), ('Chamada Pública - Outros', 'Chamada Pública - Outros'), ('Chamada Pública - PRONATER', 'Chamada Pública - PRONATER')], default='Licitação', max_length=50, verbose_name='Tipo de Aquisição')),
                ('data_cadastro', models.DateTimeField(verbose_name='Cadastrada em')),
                ('arp_origem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arp_da_solicitacao_tmp', to='base.AtaRegistroPreco')),
                ('cadastrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('contrato_origem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contrato_da_solicitacao_tmp', to='base.Contrato')),
                ('credenciamento_origem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credenciamento_da_solicitacao_tmp', to='base.Credenciamento')),
                ('setor_atual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='setor_atual_tmp', to='base.Setor', verbose_name='Setor Atual')),
                ('setor_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='setor_origem_tmp', to='base.Setor', verbose_name='Setor de Origem')),
            ],
            options={
                'verbose_name': 'Solicitação Temp',
                'verbose_name_plural': 'Solicitações temp',
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoLicitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_memorando', models.CharField(max_length=80, verbose_name='Número do Memorando')),
                ('objeto', models.TextField(verbose_name='Descrição do Objeto')),
                ('objetivo', models.TextField(verbose_name='Objetivo')),
                ('justificativa', models.TextField(verbose_name='Justificativa')),
                ('situacao', models.CharField(choices=[('Cadastrado', 'Cadastrado'), ('Aguardando Recebimento', 'Aguardando Recebimento'), ('Recebido', 'Recebido'), ('Devolvido', 'Devolvido'), ('Enviado para Licitação', 'Enviado para Licitação'), ('Em Licitação', 'Em Licitação'), ('Negada', 'Negada')], default='Cadastrado', max_length=50, verbose_name='Situação')),
                ('tipo', models.CharField(choices=[('Compra', 'Compra'), ('Licitação', 'Licitação')], default='Licitação', max_length=50, verbose_name='Tipo')),
                ('tipo_aquisicao', models.CharField(choices=[('Licitação', 'Licitação'), ('Dispensa', 'Dispensa de Licitação (Outros)'), ('Dispensa de Licitação (Até R$ 17.600,00)', 'Dispensa de Licitação (Até R$ 17.600,00 - Aquisição de Bens ou Serviços Comuns)'), ('Dispensa de Licitação (Até R$ 33.000,00)', 'Dispensa de Licitação (Até R$ 33.000,00 - Obras ou Serviços de Engenharia)'), ('Inexigibilidade', 'Inexigibilidade de Licitação'), ('Credenciamento', 'Credenciamento'), ('Chamada Pública - Alimentação Escolar', 'Chamada Pública - Alimentação Escolar'), ('Chamada Pública - Outros', 'Chamada Pública - Outros'), ('Chamada Pública - PRONATER', 'Chamada Pública - PRONATER'), ('Outros Processos', 'Outros Processos')], default='Licitação', max_length=50, verbose_name='Tipo de Aquisição')),
                ('data_cadastro', models.DateTimeField(verbose_name='Cadastrada em')),
                ('obs_negacao', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Justificativa da Negação')),
                ('data_inicio_pesquisa', models.DateField(blank=True, null=True, verbose_name='Início das Pesquisas')),
                ('data_fim_pesquisa', models.DateField(blank=True, null=True, verbose_name='Fim das Pesquisas')),
                ('prazo_resposta_interessados', models.DateField(blank=True, null=True, verbose_name='Prazo para retorno dos interessados')),
                ('arquivo_minuta', models.FileField(blank=True, null=True, upload_to='upload/minutas/', verbose_name='Arquivo da Minuta')),
                ('minuta_aprovada', models.BooleanField(default=False, verbose_name='Minuta Aprovada')),
                ('data_avaliacao_minuta', models.DateTimeField(blank=True, null=True, verbose_name='Minuta Aprovada em')),
                ('obs_avaliacao_minuta', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Observação - Minuta')),
                ('arquivo_parecer_minuta', models.FileField(blank=True, null=True, upload_to='upload/minutas/', verbose_name='Arquivo com o Parecer')),
                ('prazo_aberto', models.NullBooleanField(default=False, verbose_name='Aberto para Recebimento de Pesquisa')),
                ('liberada_para_pedido', models.BooleanField(default=False, verbose_name='Liberada para Pedido')),
                ('termo_inexigibilidade', models.FileField(blank=True, null=True, upload_to='upload/minutas/', verbose_name='Termo de Inexigibilidade')),
                ('contratacao_global', models.BooleanField(default=False, verbose_name='Contratação Global (Com pagamentos mensais fixos)')),
                ('numero_meses_contratacao_global', models.IntegerField(null=True, verbose_name='Informe o Número de Meses do Contrato')),
                ('termo_referencia', models.FileField(blank=True, null=True, upload_to=base.models.upload_path_termo_referencia, verbose_name='Termo de Referência')),
                ('arp_origem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arp_da_solicitacao', to='base.AtaRegistroPreco')),
                ('cadastrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('contrato_origem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contrato_da_solicitacao', to='base.Contrato')),
                ('credenciamento_origem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credenciamento_da_solicitacao', to='base.Credenciamento')),
                ('interessados', models.ManyToManyField(to='base.Secretaria')),
                ('minuta_avaliada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aprova_minuta', to=settings.AUTH_USER_MODEL, verbose_name='Minuta Aprovada Por')),
                ('ordenador_despesa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordenador_despesa', to='base.PessoaFisica', verbose_name='Ordenador de Despesa')),
                ('ordenador_despesa_secretaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordenador_despesa_secretaria', to='base.PessoaFisica', verbose_name='Ordenador de Despesa da Secretaria')),
                ('processo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Processo')),
                ('responsavel_secretaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsavel_secretaria', to='base.PessoaFisica', verbose_name='Responsável do Órgão')),
                ('setor_atual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='setor_atual', to='base.Setor', verbose_name='Setor Atual')),
                ('setor_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='setor_origem', to='base.Setor', verbose_name='Setor de Origem')),
            ],
            options={
                'verbose_name': 'Solicitação de Licitação',
                'verbose_name_plural': 'Solicitações de Licitação',
            },
        ),
        migrations.CreateModel(
            name='SocioCRC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=20, verbose_name='CPF')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome')),
                ('rg', models.CharField(max_length=20, verbose_name='Carteira de Identidade')),
                ('rg_emissor', models.CharField(max_length=20, verbose_name='Órgão Expedidor ')),
                ('data_expedicao', models.DateField(verbose_name='Data de Expedição')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('email', models.CharField(max_length=200, verbose_name='Email ')),
                ('crc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.FornecedorCRC', verbose_name='CRC')),
            ],
            options={
                'verbose_name': 'Sócio',
                'verbose_name_plural': 'Sócios',
            },
        ),
        migrations.CreateModel(
            name='RodadaPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rodada', models.IntegerField(verbose_name='Rodada de Lances')),
                ('atual', models.BooleanField(default=False, verbose_name='Rodada Atual')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao', verbose_name='Item da Solicitação')),
                ('pregao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Pregao', verbose_name='Pregão')),
            ],
            options={
                'verbose_name': 'Rodada do Pregão',
                'verbose_name_plural': 'Rodadas do Pregão',
            },
        ),
        migrations.CreateModel(
            name='ResultadoItemPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Valor')),
                ('marca', models.CharField(max_length=200, null=True, verbose_name='Marca')),
                ('ordem', models.IntegerField(verbose_name='Classificação')),
                ('situacao', models.CharField(choices=[('Classificado', 'Classificado'), ('Inabilitado', 'Inabilitado'), ('Desclassificado', 'Desclassificado')], max_length=100, verbose_name='Situação')),
                ('observacoes', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Observação')),
                ('empate', models.BooleanField(default=False, verbose_name='Empate')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao', verbose_name='Solicitação')),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ParticipantePregao', verbose_name='Participante')),
            ],
            options={
                'verbose_name': 'Resultado da Licitação',
                'verbose_name_plural': 'Resultados da Licitação',
            },
        ),
        migrations.CreateModel(
            name='PropostaItemPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Valor')),
                ('marca', models.CharField(max_length=200, null=True, verbose_name='Marca')),
                ('desclassificado', models.BooleanField(default=False, verbose_name='Desclassificado')),
                ('motivo_desclassificacao', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Motivo da Desclassificação')),
                ('desistencia', models.BooleanField(default=False, verbose_name='Desistência')),
                ('motivo_desistencia', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Motivo da Desistência')),
                ('concorre', models.BooleanField(default=True, verbose_name='Concorre')),
                ('valor_item_lote', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor do Item do Lote')),
                ('ordem_inicio', models.PositiveIntegerField(default=0, verbose_name='Ordem do Lance')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao', verbose_name='Solicitação')),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ParticipantePregao', verbose_name='Participante')),
                ('pregao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Pregao', verbose_name='Pregão')),
            ],
            options={
                'verbose_name': 'Valor do Item do Pregão',
                'verbose_name_plural': 'Valores do Item do Pregão',
            },
        ),
        migrations.AddField(
            model_name='processo',
            name='setor_origem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Setor', verbose_name='Setor de Origem'),
        ),
        migrations.AddField(
            model_name='pregao',
            name='solicitacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao', verbose_name='Solicitação'),
        ),
        migrations.AddField(
            model_name='pregao',
            name='tipo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.TipoPregao', verbose_name='Critério de Julgamento'),
        ),
        migrations.AddField(
            model_name='pregao',
            name='tipo_desconto',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.TipoPregaoDesconto', verbose_name='Tipo de Desconto'),
        ),
        migrations.AddField(
            model_name='pessoafisica',
            name='setor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Setor', verbose_name='Setor'),
        ),
        migrations.AddField(
            model_name='pessoafisica',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PesquisaMercadologica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(blank=True, max_length=255, null=True, verbose_name='Razão Social')),
                ('cnpj', models.CharField(blank=True, max_length=255, null=True, verbose_name='CNPJ')),
                ('endereco', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('ie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Inscrição Estadual')),
                ('telefone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telefone')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('nome_representante', models.CharField(blank=True, max_length=255, null=True, verbose_name='Representante Legal')),
                ('cpf_representante', models.CharField(blank=True, max_length=255, null=True, verbose_name='CPF do Representante Legal')),
                ('rg_representante', models.CharField(blank=True, max_length=255, null=True, verbose_name='RG do Representante Legal')),
                ('endereco_representante', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço do Representante Legal')),
                ('validade_proposta', models.CharField(blank=True, max_length=200, null=True, verbose_name='Dias de Validade da Proposta')),
                ('cadastrada_em', models.DateTimeField(blank=True, null=True, verbose_name='Data de Envio da Proposta')),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='upload/pesquisas/', verbose_name='Arquivo da Proposta')),
                ('numero_ata', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número da Ata')),
                ('vigencia_ata', models.DateField(blank=True, null=True, verbose_name='Vigência da Ata')),
                ('orgao_gerenciador_ata', models.CharField(blank=True, max_length=255, null=True, verbose_name='Órgão Gerenciador da Ata')),
                ('origem', models.CharField(blank=True, choices=[('Ata de Registro de Preço', 'Ata de Registro de Preço'), ('Fornecedor', 'Fornecedor')], max_length=100, null=True, verbose_name='Origem')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao')),
            ],
            options={
                'verbose_name': 'Pesquisa Mercadológica',
                'verbose_name_plural': 'Pesquisas Mercadológicas',
            },
        ),
        migrations.CreateModel(
            name='PedidoCredenciamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor')),
                ('pedido_em', models.DateTimeField(verbose_name='Pedido em')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('credenciamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Credenciamento')),
                ('fornecedor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Fornecedor')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemCredenciamento')),
                ('pedido_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Setor')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao')),
            ],
            options={
                'verbose_name': 'Pedido do Credenciamento',
                'verbose_name_plural': 'Pedidos do Credenciamento',
            },
        ),
        migrations.CreateModel(
            name='PedidoContrato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor')),
                ('pedido_em', models.DateTimeField(verbose_name='Pedido em')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Contrato')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemContrato')),
                ('pedido_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Setor')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao')),
            ],
            options={
                'verbose_name': 'Pedido do Contrato',
                'verbose_name_plural': 'Pedidos do Contrato',
            },
        ),
        migrations.CreateModel(
            name='PedidoAtaRegistroPreco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor')),
                ('pedido_em', models.DateTimeField(verbose_name='Pedido em')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('ata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AtaRegistroPreco')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemAtaRegistroPreco')),
                ('pedido_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Setor')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao')),
            ],
            options={
                'verbose_name': 'Pedido da ARP',
                'verbose_name_plural': 'Pedidos da ARP',
            },
        ),
        migrations.AddField(
            model_name='participantepregao',
            name='pregao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Pregao', verbose_name='Pregão'),
        ),
        migrations.CreateModel(
            name='ParticipanteItemPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao', verbose_name='Item')),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ParticipantePregao', verbose_name='Participante')),
            ],
            options={
                'verbose_name': 'Participante do Item do Pregão',
                'verbose_name_plural': 'Participantes do Item do Pregão',
            },
        ),
        migrations.CreateModel(
            name='OrdemCompra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=200, verbose_name='Número da Ordem')),
                ('data', models.DateField(verbose_name='Data')),
                ('tipo', models.CharField(choices=[('Compras', 'Compras'), ('Serviços', 'Serviços')], default='Compras', max_length=100, verbose_name='Tipo da Ordem')),
                ('projeto_atividade_num', models.CharField(blank=True, max_length=200, null=True, verbose_name='Número do Projeto de Atividade')),
                ('projeto_atividade_descricao', models.CharField(blank=True, max_length=200, null=True, verbose_name='Descrição do Projeto de Atividade')),
                ('programa_num', models.CharField(blank=True, max_length=200, null=True, verbose_name='Número do Programa')),
                ('programa_descricao', models.CharField(blank=True, max_length=200, null=True, verbose_name='Descrição do Programa')),
                ('fonte_num', models.CharField(blank=True, max_length=200, null=True, verbose_name='Número da Fonte')),
                ('fonte_descricao', models.CharField(blank=True, max_length=200, null=True, verbose_name='Descrição da Fonte')),
                ('elemento_despesa_num', models.CharField(blank=True, max_length=200, null=True, verbose_name='Número do Elemento de Despesa')),
                ('elemento_despesa_descricao', models.CharField(blank=True, max_length=200, null=True, verbose_name='Descrição do Elemento de Despesa')),
                ('data_cadastro', models.DateTimeField(null=True, verbose_name='Cadastrada em')),
                ('exibe_nome_secretario', models.BooleanField(default=True, verbose_name='Incluir Assinatura do Secretário')),
                ('exibe_nome_ordenador', models.BooleanField(default=True, verbose_name='Incluir Assinatura do Ordenador de Despesa')),
                ('cadastrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ordenador_despesa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordenador_despesa_ordem', to='base.PessoaFisica', verbose_name='Ordenador de Despesa')),
                ('ordenador_despesa_secretaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordenador_despesa_secretaria_ordem', to='base.PessoaFisica', verbose_name='Ordenador de Despesa da Secretaria')),
                ('responsavel_secretaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsavel_secretaria_ordem', to='base.PessoaFisica', verbose_name='Responsável da Secretaria')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao', verbose_name='Solicitação')),
            ],
            options={
                'verbose_name': 'Ordem de Compra',
                'verbose_name_plural': 'Ordens de Compra',
            },
        ),
        migrations.CreateModel(
            name='MovimentoSolicitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_envio', models.DateTimeField(blank=True, null=True, verbose_name='Enviado Em')),
                ('data_recebimento', models.DateTimeField(blank=True, null=True, verbose_name='Recebido Em')),
                ('obs', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Observação')),
                ('enviado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimentacao_enviado_por', to=settings.AUTH_USER_MODEL)),
                ('recebido_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movimentacao_recebido_por', to=settings.AUTH_USER_MODEL)),
                ('setor_destino', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movimentacao_setor_destino', to='base.Setor')),
                ('setor_origem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimentacao_setor_origem', to='base.Setor')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao')),
            ],
            options={
                'verbose_name': 'Movimento da Solicitação',
                'verbose_name_plural': 'Movimentos da Solicitação',
            },
        ),
        migrations.CreateModel(
            name='ModeloDocumento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=1000, verbose_name='Nome do Documento')),
                ('palavras_chaves', models.CharField(blank=True, max_length=4000, null=True, verbose_name='Palavras-Chave')),
                ('cadastrado_em', models.DateTimeField(verbose_name='Cadastrado Em')),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='upload/modelos_documentos/', verbose_name='Arquivo')),
                ('cadastrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.PessoaFisica')),
                ('tipo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.TipoModelo')),
                ('tipo_objeto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.TipoObjetoModelo')),
            ],
            options={
                'verbose_name': 'Modelo de Documento',
                'verbose_name_plural': 'Modelos de Documentos',
            },
        ),
        migrations.CreateModel(
            name='ModeloAta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=1000, verbose_name='Nome da Ata')),
                ('tipo', models.CharField(choices=[('Ata de Sessão Inicial', 'Ata de Sessão Inicial'), ('Ata de Julgamento', 'Ata de Julgamento'), ('Ata de Licitação Fracassada', 'Ata de Licitação Fracassada'), ('Ata de Licitação Deserta', 'Ata de Licitação Deserta'), ('Ata de Saneamento', 'Ata de Saneamento')], max_length=100, verbose_name='Tipo da Ata')),
                ('palavras_chaves', models.CharField(blank=True, max_length=4000, null=True, verbose_name='Palavras-Chave')),
                ('cadastrado_em', models.DateTimeField(verbose_name='Cadastrado Em')),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='upload/minutas/', verbose_name='Arquivo')),
                ('cadastrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.PessoaFisica')),
            ],
            options={
                'verbose_name': 'Modelo de Ata',
                'verbose_name_plural': 'Modelos de Atas',
            },
        ),
        migrations.CreateModel(
            name='MembroComissaoLicitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=100, verbose_name='Matrícula')),
                ('funcao', models.CharField(choices=[('Apoio', 'Apoio'), ('Membro', 'Membro'), ('Membro Suplente', 'Membro Suplente'), ('Pregoeiro', 'Pregoeiro'), ('Presidente', 'Presidente')], default='Apoio', max_length=100, verbose_name='Função')),
                ('comissao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ComissaoLicitacao')),
                ('membro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.PessoaFisica')),
            ],
            options={
                'verbose_name': 'Membro da Comissão de Licitação',
                'verbose_name_plural': 'Membros da Comissão de Licitação',
            },
        ),
        migrations.CreateModel(
            name='LogDownloadArquivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome Empresarial')),
                ('responsavel', models.CharField(max_length=500, verbose_name='Nome do Responsável')),
                ('cpf', models.CharField(max_length=500, verbose_name='CPF')),
                ('cnpj', models.CharField(max_length=500, verbose_name='CNPJ Empresarial')),
                ('endereco', models.CharField(max_length=500, verbose_name='Endereço')),
                ('telefone', models.CharField(max_length=500, verbose_name='Telefone')),
                ('email', models.CharField(max_length=500, verbose_name='Email')),
                ('interesse', models.CharField(choices=[('Participar da Licitação', 'Participar da Licitação'), ('Apenas Consulta', 'Apenas Consulta')], max_length=100, verbose_name='Interesse')),
                ('baixado_em', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Baixado em')),
                ('arquivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AnexoPregao')),
                ('estado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Estado', verbose_name='Estado')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Municipio', verbose_name='Cidade')),
            ],
            options={
                'verbose_name': 'Log de Download de Arquivo',
                'verbose_name_plural': 'Logs de Download de Arquivo',
            },
        ),
        migrations.CreateModel(
            name='LanceItemRodadaPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor')),
                ('declinio', models.BooleanField(default=False, verbose_name='Declínio')),
                ('ordem_lance', models.IntegerField(verbose_name='Ordem')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao', verbose_name='Item da Solicitação')),
                ('participante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ParticipantePregao', verbose_name='Participante')),
                ('rodada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.RodadaPregao', verbose_name='Rodada')),
            ],
            options={
                'verbose_name': 'Lance da Rodada do Pregão',
                'verbose_name_plural': 'Lances da Rodada do Pregão',
                'ordering': ['-valor'],
            },
        ),
        migrations.AddField(
            model_name='itemsolicitacaolicitacao',
            name='material',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.MaterialConsumo'),
        ),
        migrations.AddField(
            model_name='itemsolicitacaolicitacao',
            name='solicitacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao', verbose_name='Solicitação'),
        ),
        migrations.AddField(
            model_name='itemsolicitacaolicitacao',
            name='unidade',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.TipoUnidade', verbose_name='Unidade'),
        ),
        migrations.CreateModel(
            name='ItemQuantidadeSecretaria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('aprovado', models.BooleanField(default=False, verbose_name='Aprovado')),
                ('justificativa_reprovacao', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Motivo da Negação do Pedido')),
                ('avaliado_em', models.DateTimeField(blank=True, null=True, verbose_name='Avaliado Em')),
                ('observacoes', models.CharField(blank=True, max_length=500, null=True, verbose_name='Observações')),
                ('avaliado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pedido_avaliado_por', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao')),
                ('secretaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Secretaria')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao', verbose_name='Solicitação')),
            ],
            options={
                'verbose_name': 'Pedido de Itens da Secretaria',
                'verbose_name_plural': 'Pedidos de Itens da Secretaria',
            },
        ),
        migrations.CreateModel(
            name='ItemPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unidade', models.CharField(max_length=500, verbose_name='Unidade de Medida')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Quantidade')),
                ('valor_medio', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Valor Médio')),
                ('total', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Total')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.MaterialConsumo')),
                ('pregao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Pregao', verbose_name='Pregão')),
            ],
            options={
                'verbose_name': 'Item do Pregão',
                'verbose_name_plural': 'Itens do Pregão',
                'ordering': ['pregao', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ItemPesquisaMercadologica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(blank=True, max_length=255, null=True, verbose_name='Marca')),
                ('valor_maximo', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor Máximo')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('motivo_rejeicao', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Motivo da Rejeição')),
                ('rejeitado_em', models.DateTimeField(null=True, verbose_name='Rejeitado em')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao')),
                ('pesquisa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.PesquisaMercadologica', verbose_name='Pesquisa')),
                ('rejeitado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ItemLote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_item', models.IntegerField(verbose_name='Número do Item')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_do_lote', to='base.ItemSolicitacaoLicitacao')),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lote', to='base.ItemSolicitacaoLicitacao')),
            ],
            options={
                'verbose_name': 'Item do Lote',
                'verbose_name_plural': 'Itens dos Lotes',
            },
        ),
        migrations.AddField(
            model_name='itemcredenciamento',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao'),
        ),
        migrations.AddField(
            model_name='itemcredenciamento',
            name='material',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.MaterialConsumo'),
        ),
        migrations.AddField(
            model_name='itemcredenciamento',
            name='unidade',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.TipoUnidade', verbose_name='Unidade'),
        ),
        migrations.AddField(
            model_name='itemcontrato',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao'),
        ),
        migrations.AddField(
            model_name='itemcontrato',
            name='material',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.MaterialConsumo'),
        ),
        migrations.AddField(
            model_name='itemcontrato',
            name='participante',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ParticipantePregao'),
        ),
        migrations.AddField(
            model_name='itemcontrato',
            name='unidade',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.TipoUnidade', verbose_name='Unidade'),
        ),
        migrations.AddField(
            model_name='itemataregistropreco',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ItemSolicitacaoLicitacao'),
        ),
        migrations.AddField(
            model_name='itemataregistropreco',
            name='material',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.MaterialConsumo'),
        ),
        migrations.AddField(
            model_name='itemataregistropreco',
            name='participante',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ParticipantePregao'),
        ),
        migrations.AddField(
            model_name='itemataregistropreco',
            name='unidade',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.TipoUnidade', verbose_name='Unidade'),
        ),
        migrations.CreateModel(
            name='InteressadoEdital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsavel', models.CharField(max_length=200, verbose_name='Responsável')),
                ('nome_empresarial', models.CharField(max_length=200, verbose_name='Nome Empresarial')),
                ('cpf', models.CharField(max_length=80, verbose_name='CPF')),
                ('cnpj', models.CharField(max_length=80, verbose_name='CNPK')),
                ('endereco', models.CharField(max_length=80, verbose_name='Endereço')),
                ('telefone', models.CharField(max_length=80, verbose_name='Telefone')),
                ('email', models.CharField(max_length=80, verbose_name='Email')),
                ('interesse', models.CharField(choices=[('Participante', 'Participar da Licitação'), ('Interessado', 'Apenas Consulta')], max_length=80, verbose_name='Interesse')),
                ('data_acesso', models.DateTimeField(verbose_name='Data de Acesso')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Municipio', verbose_name='Município')),
                ('pregao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Pregao')),
            ],
            options={
                'verbose_name': 'Interessado na Licitação',
                'verbose_name_plural': 'Interessados na Licitação',
            },
        ),
        migrations.CreateModel(
            name='HistoricoPregao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(verbose_name='Data')),
                ('obs', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Observação')),
                ('pregao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Pregao')),
            ],
            options={
                'verbose_name': 'Histórico do Pregão',
                'verbose_name_plural': 'Históricos do Pregão',
                'ordering': ['data'],
            },
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='municipio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Municipio'),
        ),
        migrations.CreateModel(
            name='Feriado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('descricao', models.CharField(max_length=300, null=True, verbose_name='Descrição')),
                ('recorrente', models.BooleanField(default=False, help_text='Selecione para as datas que serão abonadas todos os anos, como feriados nacionais.')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data de Cadastro')),
                ('cadastrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Feriado',
                'verbose_name_plural': 'Feriados',
            },
        ),
        migrations.CreateModel(
            name='EmailEnviado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='Título do Email')),
                ('destinatarios', models.CharField(max_length=10000, verbose_name='Emails dos Destinatários')),
                ('mensagem', models.CharField(max_length=10000, verbose_name='Mensagem do Email')),
                ('enviado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('enviado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao')),
            ],
            options={
                'verbose_name': 'Email Enviado',
                'verbose_name_plural': 'Emails Enviados',
            },
        ),
        migrations.CreateModel(
            name='DocumentoSolicitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome do Arquivo')),
                ('cadastrado_em', models.DateTimeField(blank=True, null=True, verbose_name='Cadastrado Em')),
                ('documento', models.FileField(blank=True, null=True, upload_to=base.models.upload_path_documento, verbose_name='Documento')),
                ('publico', models.BooleanField(default=False, help_text='Se sim, este documento será exibido publicamente', verbose_name='Documento Público')),
                ('cadastrado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documento_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao', verbose_name='Solicitação')),
            ],
            options={
                'verbose_name': 'Documento da Solicitação',
                'verbose_name_plural': 'Documentos da Solicitação',
            },
        ),
        migrations.AddField(
            model_name='credenciamento',
            name='pregao',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Pregao'),
        ),
        migrations.AddField(
            model_name='credenciamento',
            name='secretaria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Secretaria'),
        ),
        migrations.AddField(
            model_name='credenciamento',
            name='solicitacao',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao'),
        ),
        migrations.AddField(
            model_name='credenciamento',
            name='usuario_cancelamento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contrato',
            name='pregao',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Pregao'),
        ),
        migrations.AddField(
            model_name='contrato',
            name='solicitacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao'),
        ),
        migrations.AddField(
            model_name='contrato',
            name='usuario_cancelamento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Configuracao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, null=True, verbose_name='Nome')),
                ('endereco', models.CharField(max_length=2000, null=True, verbose_name='Endereço')),
                ('email', models.CharField(max_length=200, null=True, verbose_name='Email')),
                ('telefones', models.CharField(help_text='Separar os telefones usando /', max_length=1000, null=True, verbose_name='Telefones')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='upload/logo/', verbose_name='Logo')),
                ('cpf_ordenador_despesa', models.CharField(max_length=200, null=True, verbose_name='CPF do Ordenador de Despesa')),
                ('cnpj', models.CharField(max_length=200, null=True, verbose_name='CNPJ')),
                ('url', models.CharField(max_length=500, null=True, verbose_name='URL de Acesso')),
                ('municipio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Municipio')),
                ('ordenador_despesa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.PessoaFisica', verbose_name='Ordenador de Despesa')),
            ],
            options={
                'verbose_name': 'Variável de Configuração',
                'verbose_name_plural': 'Variáveis de Configuração',
            },
        ),
        migrations.AddField(
            model_name='comissaolicitacao',
            name='secretaria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Secretaria'),
        ),
        migrations.CreateModel(
            name='CnaeSecundario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30, verbose_name='Código')),
                ('descricao', models.CharField(max_length=500, verbose_name='Descrição')),
                ('crc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.FornecedorCRC', verbose_name='CRC')),
            ],
            options={
                'verbose_name': 'CNAE Secundário',
                'verbose_name_plural': 'CNAES Secundários',
            },
        ),
        migrations.CreateModel(
            name='CertidaoCRC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=1000, verbose_name='Nome')),
                ('validade', models.DateField(verbose_name='Validade')),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='upload/crc/', verbose_name='Arquivo')),
                ('crc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.FornecedorCRC', verbose_name='CRC')),
            ],
            options={
                'verbose_name': 'Certidão CRC',
                'verbose_name_plural': 'Certidões CRC',
            },
        ),
        migrations.AddField(
            model_name='ataregistropreco',
            name='fornecedor_adesao_arp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fornecedor_contrato_adesao', to='base.Fornecedor', verbose_name='Fornecedor'),
        ),
        migrations.AddField(
            model_name='ataregistropreco',
            name='pregao',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Pregao'),
        ),
        migrations.AddField(
            model_name='ataregistropreco',
            name='secretaria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Secretaria'),
        ),
        migrations.AddField(
            model_name='ataregistropreco',
            name='solicitacao',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.SolicitacaoLicitacao'),
        ),
        migrations.AddField(
            model_name='ataregistropreco',
            name='usuario_cancelamento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='anexopregao',
            name='pregao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Pregao'),
        ),
        migrations.CreateModel(
            name='AnexoCredenciamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome')),
                ('data', models.DateField(verbose_name='Data')),
                ('arquivo', models.FileField(max_length=255, upload_to='upload/pregao/editais/anexos/')),
                ('cadastrado_em', models.DateTimeField(verbose_name='Cadastrado em')),
                ('publico', models.BooleanField(default=False, help_text='Se sim, este documento será exibido publicamente', verbose_name='Documento Público')),
                ('cadastrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('credenciamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Credenciamento')),
            ],
            options={
                'verbose_name': 'Anexo do Credenciamento',
                'verbose_name_plural': 'Anexos do Credenciamento',
            },
        ),
        migrations.CreateModel(
            name='AnexoContrato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome')),
                ('data', models.DateField(verbose_name='Data')),
                ('arquivo', models.FileField(max_length=255, upload_to='upload/pregao/editais/anexos/')),
                ('cadastrado_em', models.DateTimeField(verbose_name='Cadastrado em')),
                ('publico', models.BooleanField(default=False, help_text='Se sim, este documento será exibido publicamente', verbose_name='Documento Público')),
                ('cadastrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Contrato')),
            ],
            options={
                'verbose_name': 'Anexo do Contrato',
                'verbose_name_plural': 'Anexos do Contrato',
            },
        ),
        migrations.CreateModel(
            name='AnexoAtaRegistroPreco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome')),
                ('data', models.DateField(verbose_name='Data')),
                ('arquivo', models.FileField(max_length=255, upload_to='upload/pregao/editais/anexos/')),
                ('cadastrado_em', models.DateTimeField(verbose_name='Cadastrado em')),
                ('publico', models.BooleanField(default=False, help_text='Se sim, este documento será exibido publicamente', verbose_name='Documento Público')),
                ('ata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AtaRegistroPreco')),
                ('cadastrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Anexo da ARP',
                'verbose_name_plural': 'Anexos da ARP',
            },
        ),
        migrations.CreateModel(
            name='AditivoItemContrato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tipo', models.CharField(blank=True, choices=[('', '-----------------'), ('Acréscimo de Quantitativos', 'Acréscimo de Quantitativos'), ('Acréscimo de Valor', 'Acréscimo de Valor'), ('Reajuste Econômico-financeiro', 'Reajuste Econômico-financeiro'), ('Supressão de Quantitativo', 'Supressão de Quantitativo'), ('Supressão de Valor', 'Supressão de Valor')], max_length=50, null=True, verbose_name='Tipo de Aditivo')),
                ('indice', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Índice de Reajuste')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ItemContrato')),
            ],
            options={
                'verbose_name': 'Aditivo de Item de Contrato',
                'verbose_name_plural': 'Aditivos de Itens de Contrato',
            },
        ),
        migrations.CreateModel(
            name='Aditivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.PositiveSmallIntegerField(default=0)),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de Vencimento')),
                ('de_prazo', models.BooleanField(default=False, verbose_name='Aditivo de Prazo')),
                ('de_valor', models.BooleanField(default=False, verbose_name='Aditivo de Valor')),
                ('tipo', models.CharField(blank=True, choices=[('', '-----------------'), ('Acréscimo de Quantitativos', 'Acréscimo de Quantitativos'), ('Acréscimo de Valor', 'Acréscimo de Valor'), ('Reajuste Econômico-financeiro', 'Reajuste Econômico-financeiro'), ('Supressão de Quantitativo', 'Supressão de Quantitativo'), ('Supressão de Valor', 'Supressão de Valor')], max_length=50, null=True, verbose_name='Tipo de Aditivo')),
                ('indice', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Índice de Reajuste')),
                ('indice_total_contrato', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Índice Total')),
                ('valor_atual', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Atual')),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aditivos_set', to='base.Contrato')),
            ],
            options={
                'verbose_name': 'Aditivo de Contrato',
                'verbose_name_plural': 'Aditivos de Contrato',
                'ordering': ['ordem'],
            },
        ),
    ]
